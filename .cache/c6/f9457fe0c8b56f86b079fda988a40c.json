{"id":"shader/vertex.glsl","dependencies":[{"name":"C:\\Users\\Sudhir Kumar\\Desktop\\New folder (2)\\three-js-scrolltriger\\package.json","includedInParent":true,"mtime":1717216087840}],"generated":{"js":"module.exports = \"#define GLSLIFY 1\\nuniform float time;\\nvarying vec2 vUv;\\nvarying vec4 vPosition;\\nvarying vec3 vNormal;\\nuniform vec2 pixels;\\nfloat PI = 3.1415926535897932384626433832795;\\n\\nvoid main() {\\n    vUv = uv;\\n    vNormal = normal;\\n    \\n    // More dynamic wave effect\\n    float waveFrequency = 2.0; // Increase the frequency for more waves\\n    float waveAmplitude = 0.02; // Adjust the amplitude for stronger waves\\n    float waveSpeed = 2.0; // Adjust the speed for faster movement\\n    vec3 newPosition = position;\\n    \\n    // Apply a dynamic wave based on time and position\\n    float waveOffsetX = sin(time * waveSpeed) * 0.1; // Add variation over time\\n    float waveOffsetY = cos(time * waveSpeed) * 0.1; // Add variation over time\\n    newPosition.x += cos((newPosition.y + waveOffsetY) * waveFrequency + time + waveOffsetX) * waveAmplitude;\\n    newPosition.y += sin((newPosition.x + waveOffsetX) * waveFrequency + time + waveOffsetY) * waveAmplitude;\\n\\n    // Compute the final position\\n    vPosition = modelViewMatrix * vec4(newPosition, 1.0);\\n    gl_Position = projectionMatrix * vPosition;\\n}\\n\";"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"shader/vertex.glsl","original":{"line":1,"column":0},"name":"module"},{"generated":{"line":1,"column":6},"source":"shader/vertex.glsl","original":{"line":1,"column":6}},{"generated":{"line":1,"column":7},"source":"shader/vertex.glsl","original":{"line":1,"column":7},"name":"exports"},{"generated":{"line":1,"column":14},"source":"shader/vertex.glsl","original":{"line":1,"column":14}},{"generated":{"line":1,"column":17},"source":"shader/vertex.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":1134},"source":"shader/vertex.glsl","original":{"line":1,"column":1132}}],"sources":{"shader/vertex.glsl":"module.exports=\"#define GLSLIFY 1\\nuniform float time;\\nvarying vec2 vUv;\\nvarying vec4 vPosition;\\nvarying vec3 vNormal;\\nuniform vec2 pixels;\\nfloat PI = 3.1415926535897932384626433832795;\\n\\nvoid main() {\\n    vUv = uv;\\n    vNormal = normal;\\n    \\n    // More dynamic wave effect\\n    float waveFrequency = 2.0; // Increase the frequency for more waves\\n    float waveAmplitude = 0.02; // Adjust the amplitude for stronger waves\\n    float waveSpeed = 2.0; // Adjust the speed for faster movement\\n    vec3 newPosition = position;\\n    \\n    // Apply a dynamic wave based on time and position\\n    float waveOffsetX = sin(time * waveSpeed) * 0.1; // Add variation over time\\n    float waveOffsetY = cos(time * waveSpeed) * 0.1; // Add variation over time\\n    newPosition.x += cos((newPosition.y + waveOffsetY) * waveFrequency + time + waveOffsetX) * waveAmplitude;\\n    newPosition.y += sin((newPosition.x + waveOffsetX) * waveFrequency + time + waveOffsetY) * waveAmplitude;\\n\\n    // Compute the final position\\n    vPosition = modelViewMatrix * vec4(newPosition, 1.0);\\n    gl_Position = projectionMatrix * vPosition;\\n}\\n\";"},"lineCount":null}},"error":null,"hash":"336fc64b7363168d45aad9b7dc298117","cacheData":{"env":{}}}